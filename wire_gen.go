// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/eve-an/estimated/internal/db"
	"github.com/eve-an/estimated/internal/handlers"
	"github.com/eve-an/estimated/internal/middleware"
	"github.com/eve-an/estimated/internal/session"
	"github.com/google/wire"
	"log/slog"
	"os"
)

// Injectors from wire.go:

func InitializeApp() (*handlers.Application, error) {
	logger := ProvideLogger()
	sessionStore := session.NewSessionStore()
	votesHandler := handlers.NewVotesHandler(logger, sessionStore)
	sessionHandler := handlers.NewSessionHandler(logger)
	middlewareMiddleware := middleware.NewMiddleware(logger, sessionStore)
	application := handlers.NewApplication(votesHandler, sessionHandler, middlewareMiddleware)
	return application, nil
}

// wire.go:

var voteEntryStoreSet = wire.NewSet(session.NewSessionStore, wire.Bind(new(db.VoteEntryStore), new(*session.SessionStore)))

func ProvideLogger() *slog.Logger {
	return slog.New(slog.NewJSONHandler(os.Stdout, nil))
}
