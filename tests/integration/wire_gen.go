// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package integration

import (
	"github.com/eve-an/estimated/internal/api/handlers"
	"github.com/eve-an/estimated/internal/api/middleware"
	"github.com/eve-an/estimated/internal/config"
	"github.com/eve-an/estimated/internal/di"
	"github.com/eve-an/estimated/internal/infra/notify"
	"github.com/eve-an/estimated/internal/infra/store"
	"github.com/eve-an/estimated/internal/service"
	"net/http"
)

// Injectors from wire.go:

func InitializeTestApp(config2 *config.Config) (http.Handler, error) {
	logger := di.ProvideLogger()
	sessionNotifier := notify.NewSessionNotifier(config2)
	sessionStore := store.NewSessionStore(sessionNotifier)
	voteService := service.NewVoteService(sessionStore, sessionNotifier, logger)
	votesHandler := handlers.NewVotesHandler(logger, voteService)
	sessionHandler := handlers.NewSessionHandler(logger)
	eventService := service.NewEventService(logger, sessionNotifier, voteService)
	eventHandler := handlers.NewEventHandler(logger, eventService)
	middlewareMiddleware := middleware.NewMiddleware(logger)
	handler := di.ProvideRouter(votesHandler, sessionHandler, eventHandler, middlewareMiddleware, config2)
	return handler, nil
}
